{"version":3,"sourceRoot":"","sources":["variables/_colors.scss","mixins/_media.scss","variables/_typography.scss","utilities/_utilities.scss","base/_reset.scss","layout/_container.scss","layout/_grid.scss","components/button/_button.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["/* -------------------------- \n   ---- colors --------------  \n   --------------------------*/\n$colors: (\n  \"orange\": orange,\n  \"blue\": blue,\n  \"red\": #ff0000,\n);\n\n@each $key, $val in $colors {\n  .text-#{$key} {\n    color: $val;\n  }\n  .bg-#{$key} {\n    background-color: $val;\n  }\n  // generate 10 light grades\n  @for $i from 0 to 10 {\n    .text-#{$key}-light-#{$i} {\n      color: mix(#fff, $val, $i * 10);\n    }\n    .bg-#{$key}-light-#{$i} {\n      background-color: mix(#fff, $val, $i * 10);\n    }\n\n    .text-#{$key}-dark-#{$i} {\n      color: mix(#000, $val, $i * 10);\n    }\n    .bg-#{$key}-dark-#{$i} {\n      background-color: mix(#000, $val, $i * 10);\n    }\n    // hover effect on buttons\n    .btn.bg-#{$key}-light-#{$i}:hover {\n      background-color: mix(#fff, $val, $i * 5);\n    }\n    .btn.bg-#{$key}-dark-#{$i}:hover {\n      background-color: mix(#000, $val, $i * 5);\n    }\n  }\n}\n","@use \"sass:map\";\n/* ------------------------------------ \n   --------- breakpoins ---------------\n  \n  xs -> under 300px -> 300/16 = 18.75 em \n  sm -> under 350px -> 350/16 = 21.87 em \n  md -> under 900px -> 900/16 = 56.25 em \n  \n   ------------------------------------ */\n\n$breakpoints: (\n  \"xs\": 18.75em,\n  \"sm\": 21.87em,\n  \"md\": 56.25em,\n);\n\n@mixin respond($breakpoint) {\n  @media (max-width: map.get($breakpoints , $breakpoint)) {\n    @content;\n  }\n}\n","@use \"./../mixins/media\" as *;\n\n/* ----------------------------------- \n-------- font-family and sizes -------\n-------------------------------------- */\n\n:root {\n  --font-base: 1rem;\n}\n\n$font-family: \"Roboto\", sans-serif;\n$font-base: var(--font-base);\n/* ----------------------------------- \n-------- headings --------------------\n-------------------------------------- */\n// 1rem -> 10px\nh1,\n.h1 {\n  font-size: calc($font-base * 7); // 70px\n}\n\nh2,\n.h2 {\n  font-size: calc($font-base * 6);\n}\n\nh3,\n.h3 {\n  font-size: calc($font-base * 5);\n}\n\nh4,\n.h4 {\n  font-size: calc($font-base * 4);\n}\n\nh5,\n.h5 {\n  font-size: calc($font-base * 3);\n}\n\nh6,\n.h6 {\n  font-size: calc($font-base * 2);\n}\n\n// change font-base at different breakpoints\n@include respond(sm) {\n  :root {\n    --font-base: 0.6rem;\n  }\n}\n","@use \"sass:map\";\n\n/* --------------------------------------\n   ------- utilities --------------------\n   -------------------------------------- */\n\n/* ----------------------------------- \n   ------- spacing -------------------\n   -----------------------------------*/\n\n$base-padding: 1rem;\n$base-margin: 1rem;\n\n$utilities: (\n  \"padding\": (\n    \"prefix\": \"p\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-top\": (\n    \"prefix\": \"p-top\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-right\": (\n    \"prefix\": \"p-right\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-bottom\": (\n    \"prefix\": \"p-bottom\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-left\": (\n    \"prefix\": \"p-left\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"margin\": (\n    \"prefix\": \"m\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-top\": (\n    \"prefix\": \"m-top\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-right\": (\n    \"prefix\": \"m-right\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-bottom\": (\n    \"prefix\": \"m-bottom\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-left\": (\n    \"prefix\": \"m-left\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n);\n\n@each $prop, $map in $utilities {\n  $prefix: map.get($map, \"prefix\");\n  $values: map.get($map, \"values\");\n  @each $key, $val in $values {\n    .#{$prefix}-#{$key} {\n      #{$prop}: $val;\n    }\n  }\n}\n\n.circle {\n  width: fit-content;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  aspect-ratio: 1;\n}\n","@use \"./../variables/typography\" as *;\n/* --------------------------- \n   -------- global resets ----\n   --------------------------*/\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  min-height: 100vh;\n  font-family: $font-family;\n  font-size: calc($font-base * 1.6);\n  background-color: rgb(25, 28, 26);\n  color: #ddd;\n}\n\na {\n  text-decoration: none;\n}\n\ninput {\n  border: none;\n}\n\ninput:focus {\n  outline: none;\n}\n\nbutton {\n  border: none;\n}\n\nbutton:focus {\n  outline: none;\n}\n","/* ----------------------------\n  ------ container ------------\n  -----------------------------*/\n\n$container-width: 144rem;\n.container {\n  width: 100%;\n  max-width: $container-width;\n  margin: 0 auto;\n  padding: 0 1.5rem;\n}\n","/* --------------------------------------------\n   ------------- grid systems -----------------\n   -------------------------------------------- */\n\n$number-of-columns: 10;\n\n.row {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n@for $i from 1 to ($number-of-columns + 1) {\n  .col-#{$i} {\n    width: calc(($i / $number-of-columns) * 100%);\n  }\n}\n","@use \"./../../variables/typography\" as *;\n.btn {\n  padding: 1rem;\n  font-size: calc($font-base * 2.5);\n  cursor: pointer;\n}\n"]}