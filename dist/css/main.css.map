{"version":3,"sourceRoot":"","sources":["variables/_colors.scss","mixins/_media.scss","variables/_typography.scss","utilities/_utilities.scss","base/_reset.scss","layout/_container.scss","layout/_grid.scss","components/button/_button.scss"],"names":[],"mappings":"AAAA;AAAA;AAAA;AAYE;EACE,OAVK;;;AAYP;EACE,kBAbK;;;AAiBL;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AA1BJ;EACE,OAVK;;;AAYP;EACE,kBAbK;;;AAiBL;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AA1BJ;EACE,OAVK;;;AAYP;EACE,kBAbK;;;AAiBL;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AA1BJ;EACE,OAVK;;;AAYP;EACE,kBAbK;;;AAiBL;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AA1BJ;EACE,OAVK;;;AAYP;EACE,kBAbK;;;AAiBL;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAlBF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;AAGF;EACE;;;AAEF;EACE;;;ACrCN;AAAA;;AAAA;AAAA;AAAA;;AAAA;ACCA;AAAA;AAAA;AAIA;EACE;;;AAYF;AAAA;AAAA;AAIA;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;AAGF;AAAA;EAEE;;;ADjCA;ECsCA;IACE;;;AAOF;EACE,YAnDS;;;AAkDX;EACE,YAnDS;;;AAkDX;EACE,YAnDS;;;ADIX;ECuDI;IACE,YA5DK;;EA2DP;IACE,YA5DK;;EA2DP;IACE,YA5DK;;;ADIX;ECuDI;IACE,YA5DK;;EA2DP;IACE,YA5DK;;EA2DP;IACE,YA5DK;;;ADIX;ECuDI;IACE,YA5DK;;EA2DP;IACE,YA5DK;;EA2DP;IACE,YA5DK;;;AAkEb;EACE;;;AC9EF;AAAA;AAAA;AAIA;AAAA;AAAA;AAoKI;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,SAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,aAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,eAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,gBAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,QAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,YAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cAHK;;;AAEP;EACE,cA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","file":"main.css","sourcesContent":["/* -------------------------- \n   ---- colors --------------  \n   --------------------------*/\n$colors: (\n  \"black\": #2c3e50,\n  \"blue\": #2980b9,\n  \"red\": #c0392b,\n  \"green\": #27ae60,\n  \"orange\": #f39c12,\n);\n\n@each $key, $val in $colors {\n  .text-#{$key} {\n    color: $val;\n  }\n  .bg-#{$key} {\n    background-color: $val;\n  }\n  // generate 10 light grades\n  @for $i from 0 to 11 {\n    .text-#{$key}-light-#{$i} {\n      color: mix(#fff, $val, $i * 10);\n    }\n    .bg-#{$key}-light-#{$i} {\n      background-color: mix(#fff, $val, $i * 10);\n    }\n\n    .text-#{$key}-dark-#{$i} {\n      color: mix(#000, $val, $i * 10);\n    }\n    .bg-#{$key}-dark-#{$i} {\n      background-color: mix(#000, $val, $i * 10);\n    }\n    // hover effect on buttons\n    .btn.bg-#{$key}-light-#{$i}:hover {\n      background-color: mix(#fff, $val, $i * 5);\n    }\n    .btn.bg-#{$key}-dark-#{$i}:hover {\n      background-color: mix(#000, $val, $i * 5);\n    }\n  }\n}\n","@use \"sass:map\";\n/* ------------------------------------ \n   --------- breakpoins ---------------\n  \n  xs -> under 300px -> 300/16 = 18.75 em \n  sm -> under 350px -> 350/16 = 21.87 em \n  md -> under 900px -> 900/16 = 56.25 em \n  \n   ------------------------------------ */\n\n$breakpoints: (\n  \"xs\": 18.75em,\n  \"sm\": 21.87em,\n  \"md\": 56.25em,\n);\n\n@mixin respond($breakpoint) {\n  @media (max-width: map.get($breakpoints , $breakpoint)) {\n    @content;\n  }\n}\n","@use \"./../mixins/media\" as *;\n\n/* ----------------------------------- \n-------- font-family and sizes -------\n-------------------------------------- */\n\n:root {\n  --font-base: 1rem;\n}\n\n$font-family: \"Roboto\", sans-serif;\n$font-base: var(--font-base);\n\n$text-align: (\n  \"left\": left,\n  \"center\": center,\n  \"right\": right,\n);\n\n/* ----------------------------------- \n-------- headings --------------------\n-------------------------------------- */\n// 1rem -> 10px\nh1,\n.h1 {\n  font-size: calc($font-base * 7); // 70px\n}\n\nh2,\n.h2 {\n  font-size: calc($font-base * 6);\n}\n\nh3,\n.h3 {\n  font-size: calc($font-base * 5);\n}\n\nh4,\n.h4 {\n  font-size: calc($font-base * 4);\n}\n\nh5,\n.h5 {\n  font-size: calc($font-base * 3);\n}\n\nh6,\n.h6 {\n  font-size: calc($font-base * 2);\n}\n\n// change font-base at different breakpoints\n@include respond(sm) {\n  :root {\n    --font-base: 0.6rem;\n  }\n}\n\n// generate text-alignment classes\n\n@each $key, $val in $text-align {\n  .text-#{$key} {\n    text-align: $val;\n  }\n}\n\n// generate text-align classes for each breakpoint { xs - sm - md }\n@each $bp, $val in $breakpoints {\n  @include respond($bp) {\n    @each $key, $val in $text-align {\n      .text-#{$key}-#{$bp} {\n        text-align: $val;\n      }\n    }\n  }\n}\n\n.uppercase {\n  text-transform: uppercase;\n}\n","@use \"sass:map\";\n\n/* --------------------------------------\n   ------- utilities --------------------\n   -------------------------------------- */\n\n/* ----------------------------------- \n   ------- spacing -------------------\n   -----------------------------------*/\n\n$base-padding: 1rem;\n$base-margin: 1rem;\n\n$utilities: (\n  \"padding\": (\n    \"prefix\": \"p\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-top\": (\n    \"prefix\": \"pt\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-right\": (\n    \"prefix\": \"pr\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-bottom\": (\n    \"prefix\": \"pb\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"padding-left\": (\n    \"prefix\": \"pl\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"margin\": (\n    \"prefix\": \"m\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-top\": (\n    \"prefix\": \"mt\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-right\": (\n    \"prefix\": \"mr\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-bottom\": (\n    \"prefix\": \"mb\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"margin-left\": (\n    \"prefix\": \"ml\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n);\n\n@each $prop, $map in $utilities {\n  $prefix: map.get($map, \"prefix\");\n  $values: map.get($map, \"values\");\n  @each $key, $val in $values {\n    .#{$prefix}-#{$key} {\n      #{$prop}: $val;\n    }\n  }\n}\n\n.circle {\n  width: fit-content;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  aspect-ratio: 1;\n}\n\n$padding-axis: (\n  \"x\": (\n    \"prefix\": \"px\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n  \"y\": (\n    \"prefix\": \"py\",\n    \"values\": (\n      \"1\": $base-padding * 1,\n      \"2\": $base-padding * 2,\n      \"3\": $base-padding * 3,\n      \"4\": $base-padding * 4,\n      \"5\": $base-padding * 5,\n      \"6\": $base-padding * 6,\n      \"7\": $base-padding * 7,\n      \"8\": $base-padding * 8,\n      \"9\": $base-padding * 9,\n      \"10\": $base-padding * 10,\n    ),\n  ),\n);\n\n@each $key, $map in $padding-axis {\n  $prefix: map.get($map, \"prefix\");\n  $values: map.get($map, \"values\");\n  @each $key, $val in $values {\n    @if ($prefix == \"px\") {\n      .#{$prefix}-#{$key} {\n        padding-left: $val;\n        padding-right: $val;\n      }\n    } @else if($prefix == \"py\") {\n      .#{$prefix}-#{$key} {\n        padding-top: $val;\n        padding-bottom: $val;\n      }\n    }\n  }\n}\n\n$margin-axis: (\n  \"x\": (\n    \"prefix\": \"mx\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n  \"y\": (\n    \"prefix\": \"my\",\n    \"values\": (\n      \"1\": $base-margin * 1,\n      \"2\": $base-margin * 2,\n      \"3\": $base-margin * 3,\n      \"4\": $base-margin * 4,\n      \"5\": $base-margin * 5,\n      \"6\": $base-margin * 6,\n      \"7\": $base-margin * 7,\n      \"8\": $base-margin * 8,\n      \"9\": $base-margin * 9,\n      \"10\": $base-margin * 10,\n    ),\n  ),\n);\n\n@each $key, $map in $margin-axis {\n  $prefix: map.get($map, \"prefix\");\n  $values: map.get($map, \"values\");\n  @each $key, $val in $values {\n    @if ($prefix == \"mx\") {\n      .#{$prefix}-#{$key} {\n        margin-left: $val;\n        margin-right: $val;\n      }\n    } @else if($prefix == \"my\") {\n      .#{$prefix}-#{$key} {\n        margin-top: $val;\n        margin-bottom: $val;\n      }\n    }\n  }\n}\n\n// rounded borders\n$base-border-radius: 1rem;\n\n$border-radius: (\n  \"border-radius\": (\n    \"prefix\": \"br\",\n    \"values\": (\n      \"1\": $base-border-radius * 1,\n      \"2\": $base-border-radius * 2,\n      \"3\": $base-border-radius * 3,\n      \"4\": $base-border-radius * 4,\n      \"5\": $base-border-radius * 5,\n      \"6\": $base-border-radius * 6,\n      \"7\": $base-border-radius * 7,\n      \"8\": $base-border-radius * 8,\n      \"9\": $base-border-radius * 9,\n      \"10\": $base-border-radius * 10,\n    ),\n  ),\n  \"border-top-left-radius\": (\n    \"prefix\": \"br-tl\",\n    \"values\": (\n      \"1\": $base-border-radius * 1,\n      \"2\": $base-border-radius * 2,\n      \"3\": $base-border-radius * 3,\n      \"4\": $base-border-radius * 4,\n      \"5\": $base-border-radius * 5,\n      \"6\": $base-border-radius * 6,\n      \"7\": $base-border-radius * 7,\n      \"8\": $base-border-radius * 8,\n      \"9\": $base-border-radius * 9,\n      \"10\": $base-border-radius * 10,\n    ),\n  ),\n  \"border-top-right-radius\": (\n    \"prefix\": \"br-tr\",\n    \"values\": (\n      \"1\": $base-border-radius * 1,\n      \"2\": $base-border-radius * 2,\n      \"3\": $base-border-radius * 3,\n      \"4\": $base-border-radius * 4,\n      \"5\": $base-border-radius * 5,\n      \"6\": $base-border-radius * 6,\n      \"7\": $base-border-radius * 7,\n      \"8\": $base-border-radius * 8,\n      \"9\": $base-border-radius * 9,\n      \"10\": $base-border-radius * 10,\n    ),\n  ),\n  \"border-bottom-right-radius\": (\n    \"prefix\": \"br-br\",\n    \"values\": (\n      \"1\": $base-border-radius * 1,\n      \"2\": $base-border-radius * 2,\n      \"3\": $base-border-radius * 3,\n      \"4\": $base-border-radius * 4,\n      \"5\": $base-border-radius * 5,\n      \"6\": $base-border-radius * 6,\n      \"7\": $base-border-radius * 7,\n      \"8\": $base-border-radius * 8,\n      \"9\": $base-border-radius * 9,\n      \"10\": $base-border-radius * 10,\n    ),\n  ),\n  \"border-bottom-left-radius\": (\n    \"prefix\": \"br-bl\",\n    \"values\": (\n      \"1\": $base-border-radius * 1,\n      \"2\": $base-border-radius * 2,\n      \"3\": $base-border-radius * 3,\n      \"4\": $base-border-radius * 4,\n      \"5\": $base-border-radius * 5,\n      \"6\": $base-border-radius * 6,\n      \"7\": $base-border-radius * 7,\n      \"8\": $base-border-radius * 8,\n      \"9\": $base-border-radius * 9,\n      \"10\": $base-border-radius * 10,\n    ),\n  ),\n);\n\n@each $key, $map in $border-radius {\n  $prop: $key;\n  $prefix: map.get($map, \"prefix\");\n  $values: map.get($map, \"values\");\n  // @debug $prop $prefix $values;\n  @each $k, $v in $values {\n    .#{$prefix}-#{$k} {\n      #{$prop}: $v;\n    }\n  }\n}\n","@use \"./../variables/typography\" as *;\n/* --------------------------- \n   -------- global resets ----\n   --------------------------*/\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  min-height: 100vh;\n  font-family: $font-family;\n  font-size: calc($font-base * 1.6);\n}\n\na {\n  text-decoration: none;\n}\n\ninput {\n  border: none;\n}\n\ninput:focus {\n  outline: none;\n}\n\nbutton {\n  border: none;\n}\n\nbutton:focus {\n  outline: none;\n}\n","/* ----------------------------\n  ------ container ------------\n  -----------------------------*/\n\n$container-width: 144rem;\n.container {\n  width: 100%;\n  max-width: $container-width;\n  margin: 0 auto;\n  padding: 0 1.5rem;\n}\n","@use \"./../mixins/media\" as *;\n\n/* --------------------------------------------\n   ------------- grid systems -----------------\n   -------------------------------------------- */\n\n$number-of-columns: 10;\n$base-gap: 0.5rem;\n\n$gaps: (\n  \"1\": $base-gap * 1,\n  \"2\": $base-gap * 2,\n  \"3\": $base-gap * 3,\n  \"4\": $base-gap * 4,\n  \"5\": $base-gap * 5,\n);\n\n$justify: (\n  \"just-center\": center,\n  \"just-space-between\": space-between,\n  \"just-space-evenly\": space-evenly,\n  \"just-start\": flex-start,\n  \"just-end\": flex-end,\n);\n\n$align: (\n  \"align-items-center\": center,\n  \"align-items-space-between\": space-between,\n  \"align-items-space-evenly\": space-evenly,\n  \"align-items-start\": flex-start,\n  \"align-items-end\": flex-end,\n);\n\n.row {\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.col {\n  flex-grow: 1;\n  // max-width: 100%;\n}\n@for $i from 1 to ($number-of-columns + 1) {\n  .row .col-#{$i} {\n    width: calc(($i / $number-of-columns) * 100%);\n  }\n}\n\n@each $key, $val in $gaps {\n  .gap-#{$key} > * {\n    margin: $val;\n  }\n  // remove the space at the begining and the end\n  .gap-#{$key} {\n    margin-left: $val * -1;\n    margin-right: $val * -1;\n  }\n}\n\n// generate col classes for each breakpoint { xs - sm - md }\n\n@each $key, $val in $breakpoints {\n  @include respond($key) {\n    @for $i from 1 to $number-of-columns + 1 {\n      .col-#{$key}-#{$i} {\n        width: calc(($i / $number-of-columns) * 100%);\n      }\n    }\n  }\n}\n\n// justify content classes\n@each $key, $val in $justify {\n  .#{$key} {\n    justify-content: $val;\n  }\n}\n\n// generate jsutifiy classes for each breakpoint { xs - sm - md }\n@each $bp, $val in $breakpoints {\n  @include respond($bp) {\n    @each $key, $val in $justify {\n      .#{$key}-#{$bp} {\n        justify-content: $val;\n      }\n    }\n  }\n}\n\n// align items classes\n@each $key, $val in $align {\n  .#{$key} {\n    align-items: $val;\n  }\n}\n\n// generate align classes for each breakpoint { xs - sm - md }\n@each $bp, $val in $breakpoints {\n  @include respond($bp) {\n    @each $key, $val in $align {\n      .#{$key}-#{$bp} {\n        align-items: $val;\n      }\n    }\n  }\n}\n","@use \"./../../variables/typography\" as *;\n$hover-color: #222;\n.btn {\n  padding: 1rem;\n  font-size: calc($font-base * 2.5);\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.btn.outlined {\n  border: 3px solid currentColor;\n  background-color: transparent;\n}\n\n.btn.outlined:hover {\n  border: 3px solid transparent;\n  color: $hover-color;\n  background-color: #fff;\n}\n"]}